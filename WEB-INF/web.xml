<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<context-param>
		<param-name>javax.faces.CONFIG_FILES</param-name>
		<param-value>
			/WEB-INF/face_sys.xml,/WEB-INF/face_base.xml,/WEB-INF/face_stockin.xml,/WEB-INF/faces-config.xml,/WEB-INF/face_return.xml,
			/WEB-INF/tag-config.xml,/WEB-INF/face_stockout.xml,/WEB-INF/face_common.xml,/WEB-INF/face_scm.xml,
			/WEB-INF/face_stock.xml,/WEB-INF/face_report.xml
		</param-value>
	</context-param>

	<context-param>
		<description>
			指示是在客户端（client）还是在服务器端（server）保存UI组件的状态和
			session信息,server表示保存到服务器端,client表示保存到客户端, 默认为server.
		</description>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>client</param-value>
	</context-param>

	<context-param>
		<description>
			(NUMBER_OF_VIEWS_IN_SESSION)
			当状态保存方法设置为server时,控制会话中保存的视图数量,默认值15
		</description>
		<param-name>com.sun.faces.numberOfViewsInSession</param-name>
		<param-value>100</param-value>
	</context-param>

	<context-param>
		<description>定义JSF的response缓存值。默认1048。</description>
		<param-name>com.sun.faces.responseBufferSize</param-name>
		<param-value>2096</param-value>
	</context-param>

	<filter>
		<display-name>Ajax4jsf Filter</display-name>
		<filter-name>ajax4jsf</filter-name>
		<filter-class>org.ajax4jsf.Filter</filter-class>
	</filter>
	<filter>
		<description>quertz设置为1则开启自动回写任务</description>
		<filter-name>accessControl</filter-name>
		<filter-class>com.gwall.core.TimeoutFilter</filter-class>
		<init-param>
			<param-name>quertz</param-name>
			<param-value>1</param-value>
		</init-param>
		<!-- 是否启用淘宝 聚石塔 通道(true:启用 false:不启用) 默认是启用淘宝 聚石塔 @author wonderful-->
		<init-param>
			<param-name>TAOBAO_GALLERY_STATE</param-name>
			<param-value>false</param-value>
		</init-param>
		<!--  韩都ERP接口地址 @author wonderful --> 
		<init-param>
		  <param-name>ERP_INTERFACES_URL</param-name> 
		  <param-value>http://192.168.1.164:8080/hop/router</param-value> 
		</init-param>
		<!--  管易ERP接口地址 @author wonderful --> 
		<init-param>
		  <param-name>OMS_INTERFACES_URL</param-name> 
		  <param-value>http://223.4.54.103:30001/PubService.svc/</param-value> 
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>accessControl</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ajax4jsf</filter-name>
		<servlet-name>FacesServlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

	<servlet>
		<servlet-name>FacesServlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>ServletConfigurator</servlet-name>
		<servlet-class>
			org.logicalcobwebs.proxool.configuration.ServletConfigurator
		</servlet-class>
		<init-param>
			<param-name>xmlFile</param-name>
			<param-value>
				WEB-INF/classes/sqlserver-proxool.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>Admin</servlet-name>
		<servlet-class>
			org.logicalcobwebs.proxool.admin.servlet.AdminServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FacesServlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>updateFavAjax</servlet-name>
		<servlet-class>
			com.gwall.servlet.ajax.UpdateFavAjax
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>updateFavAjax</servlet-name>
		<url-pattern>/servlet/updateFavAjax</url-pattern>
	</servlet-mapping>


	<servlet-mapping>
		<servlet-name>Admin</servlet-name>
		<url-pattern>/Admin</url-pattern>
	</servlet-mapping>

	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>

	<session-config>
		<session-timeout>240</session-timeout>
	</session-config>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/config/context_config.xml,/WEB-INF/config/context_sys.xml,/WEB-INF/config/context_return.xml,
			/WEB-INF/config/context_base.xml,/WEB-INF/config/context_stockin.xml,
			/WEB-INF/config/context_stockout.xml,/WEB-INF/config/context_stock.xml,
			/WEB-INF/config/context_scm.xml
		</param-value>
	</context-param>
	<!--
		<servlet>
		<servlet-name>contextConfigLocation</servlet-name>
		<servlet-class>
		org.springframework.web.context.ContextLoaderServlet
		</servlet-class>
		<load-on-startup>2</load-on-startup>
		</servlet>
	-->

	<!-- 合并js css处理监听器 -->
	<filter>
		<filter-name>WebResourceOptimizer</filter-name>
		<filter-class>ro.isdc.wro.http.WroFilter</filter-class>
		<init-param>
			<param-name>configuration</param-name>
			<param-value>DEPLOYMENT</param-value>
		</init-param>
		<init-param>
			<param-name>gzipEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>jmxEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>ignoreMissingResources</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>disableCache</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>WebResourceOptimizer</filter-name>
		<url-pattern>/gwall/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>extensionsFilter</filter-name>
		<filter-class>
			org.apache.myfaces.component.html.util.ExtensionsFilter
		</filter-class>
		<init-param>
			<description>允许上传文件最大值</description>
			<param-name>uploadMaxFileSize</param-name>
			<param-value>10m</param-value>
		</init-param>
		<init-param>
			<description>小于该值的文件上传到内存中</description>
			<param-name>uploadThresholdSize</param-name>
			<param-value>100k</param-value>
		</init-param>
		<!--  
			<init-param>
			<description>文件上传的默认路径</description>
			<param-name>uploadRepositoryPath</param-name>
			<param-value>/temp</param-value>
			</init-param>
		-->
	</filter>

	<filter-mapping>
		<filter-name>extensionsFilter</filter-name>
		<servlet-name>FacesServlet</servlet-name>
	</filter-mapping>

	<!-- Quartz -->
	<context-param>
		<param-name>quartz:config-file</param-name>
		<param-value>quartz.properties</param-value>
	</context-param>

		<!-- 载入数据库中的作业动态添加到容器中 -->
	<servlet> 
	    <servlet-name>LoadDBJobs</servlet-name> 
    	<servlet-class>com.gwall.job.util.LoadDBJobs</servlet-class> 
    	<load-on-startup>4</load-on-startup>
  	</servlet> 
	<!-- 处理由JavaBeans Introspector的使用而引起的内存泄露的问题(解决Quartz内存无法释放) -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>

	<jsp-config>
		<taglib>
			<taglib-uri>http://www.gwall.cn</taglib-uri>
			<taglib-location>/WEB-INF/classes/GTag.tld</taglib-location>
		</taglib>
	</jsp-config>

	<!-- ============================servlet 配置========================= -->
	<!-- 货物基础资料 -->
	<servlet>
		<servlet-name>inventroyUpadte</servlet-name>
		<servlet-class>
			com.gwall.servlet.InventroyUpadteServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>inventroyUpadte</servlet-name>
		<url-pattern>/service/inventroyUpadte</url-pattern>
	</servlet-mapping>

	<!-- 新增修改用户档案 -->
	<servlet>
		<servlet-name>userUpdate</servlet-name>
		<servlet-class>
			com.gwall.servlet.UserUpdateServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>userUpdate</servlet-name>
		<url-pattern>/service/userUpdate</url-pattern>
	</servlet-mapping>

	<!-- 新增采购收货通知单 -->
	<servlet>
		<servlet-name>asnOrderAdd</servlet-name>
		<servlet-class>
			com.gwall.servlet.AsnOrderAddServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>asnOrderAdd</servlet-name>
		<url-pattern>/service/asnOrderAdd</url-pattern>
	</servlet-mapping>
	<!-- 修改采购收货通知单 -->
	<servlet>
		<servlet-name>asnOrderEdit</servlet-name>
		<servlet-class>
			com.gwall.servlet.AsnOrderEditServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>asnOrderEdit</servlet-name>
		<url-pattern>/service/asnOrderEdit</url-pattern>
	</servlet-mapping>
	<!-- 删除采购收货通知单 -->
	<servlet>
		<servlet-name>asnOrderDelete</servlet-name>
		<servlet-class>
			com.gwall.servlet.AsnOrderDeleteServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>asnOrderDelete</servlet-name>
		<url-pattern>/service/asnOrderDelete</url-pattern>
	</servlet-mapping>
	<!-- 销售出库单 -->
	<servlet>
		<servlet-name>soCreate</servlet-name>
		<servlet-class>com.gwall.servlet.SoCreateServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>soCreate</servlet-name>
		<url-pattern>/service/soCreate</url-pattern>
	</servlet-mapping>
	<!-- 退货入库通知 -->
	<servlet>
		<servlet-name>returnPlan</servlet-name>
		<servlet-class>
			com.gwall.servlet.ReturnPlanServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>returnPlan</servlet-name>
		<url-pattern>/service/returnPlan</url-pattern>
	</servlet-mapping>

	<!-- 订单状态变更 -->
	<servlet>
		<servlet-name>orderState</servlet-name>
		<servlet-class>
			com.gwall.servlet.OrderStateServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>orderState</servlet-name>
		<url-pattern>/service/orderState</url-pattern>
	</servlet-mapping>

	<!-- 追件通知 -->
	<servlet>
		<servlet-name>recoverOrder</servlet-name>
		<servlet-class>
			com.gwall.servlet.RecoverOrderServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>recoverOrder</servlet-name>
		<url-pattern>/service/recoverOrder</url-pattern>
	</servlet-mapping>

	<!-- 订单取消 -->
	<servlet>
		<servlet-name>cancelSo</servlet-name>
		<servlet-class>com.gwall.servlet.CancelSoServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>cancelSo</servlet-name>
		<url-pattern>/service/cancelSo</url-pattern>
	</servlet-mapping>

	<!-- 新增调拨计划 -->
	<servlet>
		<servlet-name>allocateOrderAdd</servlet-name>
		<servlet-class>
			com.gwall.servlet.AllocateOrderAddServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>allocateOrderAdd</servlet-name>
		<url-pattern>/service/allocateOrderAdd</url-pattern>
	</servlet-mapping>

	<!-- 商品出入库查询快照 -->
	<servlet>
		<servlet-name>inoutSnapshot</servlet-name>
		<servlet-class>
			com.gwall.servlet.InOutSnapshotServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>inoutSnapshot</servlet-name>
		<url-pattern>/service/inoutSnapshot</url-pattern>
	</servlet-mapping>

	<!-- 商品库存快照 -->
	<servlet>
		<servlet-name>stockSnapshot</servlet-name>
		<servlet-class>
			com.gwall.servlet.StockSnapshotServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>stockSnapshot</servlet-name>
		<url-pattern>/service/stockSnapshot</url-pattern>
	</servlet-mapping>

	<!-- 新增修改预售计划 -->
	<servlet>
		<servlet-name>presellUpdate</servlet-name>
		<servlet-class>
			com.gwall.servlet.PresellUpdateServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>presellUpdate</servlet-name>
		<url-pattern>/service/presellUpdate</url-pattern>
	</servlet-mapping>

	<!-- 商品库存查询(实时) -->
	<servlet>
		<servlet-name>searchStock</servlet-name>
		<servlet-class>
			com.gwall.servlet.SearchStockServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>searchStock</servlet-name>
		<url-pattern>/service/searchStock</url-pattern>
	</servlet-mapping>
	
	<!-- 平均其他费用 -->
	<servlet>
		<servlet-name>calcSKUPrice</servlet-name>
		<servlet-class>
			com.gwall.servlet.InterfaceCalcSKUPrice
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>searchStock</servlet-name>
		<url-pattern>/service/calcSKUPrice</url-pattern>
	</servlet-mapping>
	
	<!-- 库存同步 -->
	<servlet>
		<servlet-name>stockInfo</servlet-name>
		<servlet-class>
			com.gwall.servlet.StockInfoServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>stockInfo</servlet-name>
		<url-pattern>/service/stockInfo</url-pattern>
	</servlet-mapping>

	<!-- 供应商同步 -->
	<servlet>
		<servlet-name>supplier</servlet-name>
		<servlet-class>
			com.gwall.servlet.SupplierServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>supplier</servlet-name>
		<url-pattern>/service/supplier</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>SwfServlet</servlet-name>
		<servlet-class>com.gwall.servlet.SwfServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SwfServlet</servlet-name>
		<url-pattern>/servlets/swf</url-pattern>
	</servlet-mapping>

     <!-- 获取快递信息 -->
	<servlet>
		<servlet-name>expressNoInfo</servlet-name>
		<servlet-class>
			com.gwall.servlet.ExpressNoInfoServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>expressNoInfo</servlet-name>
		<url-pattern>/service/expressNoInfo</url-pattern>
	</servlet-mapping>

</web-app>
